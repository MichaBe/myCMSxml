[31.03.2012] Erster Log. Stand des Projektes:
	- Kategorien C0001 u. C0001
	- snippets S0001, S0002 u. S9999
	- standard-style funktionsfähig, allerdings noch auf die Programmierung ausgerichtet
	- index.php funktionsfähig
	- snippet.php noch nicht fertig
	- Plugin-Schnittstelle vorerst gelöscht
Fertigstellen des Entwicklungs-Stylesheets
Fertigstellen der Error-Page (error.php)
Start der Arbeit an snippet.php (Übernehmen und anpassen von index.php)
Fertigstellung funktionierender snippet.php
Einbinden der Footer-Snippets ins Pfade-System
Schreiben von snippetS9999.xml (Login-Page)
Schreiben der login.php, die PW u. Username überprüft. Verschieben der Datei an den richtigen Ort
Anpassen des Weiterleitungsalgorithmus


[04.04.2012] Zweiter Log: Loginsystem
Start der Arbeit an der ersten overview.php
Start der Arbeit an login.php (fertig zum Test)


[05.04.2012] Dritter Log: login.php und authentification.php
Fertigstellen der Login.php. Ab sofort wird die Userid im Sessioncookie nur noch gehasht gespeichert!!
Im Folgenden der Inhalt des Session-Cookies:
	- $_SESSION['UID']: 2x md5-Gehashte UID, zur Überprüfung der Usergültigkeit
	- $_SESSION['seed']: Zufallszahl zwischen (inkl.) 1000 und 9999, zur Überprüfung der Cookie-Gültigkeit
	- $_SESSION['v_md5']: 2x md5-Gehashte ¢_SESSION['seed'], zur Überprüfung der Cookie-Gültigkeit;


[06.04.2012] Arbeit am Style
Erstellen eines Styles mit GIMP, Suchen eines Passenden Fonts, Suchen der nötigen Abmessungen


[07.04.2012] Umsetzen des Styles in CSS
Fertigstellen des Styles "konservativ"
	- Bereitstellen des Webfonts
	- Bereitstellen des Header-Bildes
	- Schreiben der css-Datei
	- Umsetzten von Praxisbedingten Änderungen am Style


[11.04.2012] Backend
Löschen des Standardstyles
Festhalten von verschiedenen Ideen zum besseren customizen des Aussehens der Seite
Beginn der Arbeit am CMS-Backend mit der ersten overview.php (Übersicht über alle Dienste)


[13.04.2012] Backend
Arbeit am cms.css
Größere Änderungen an der Struktur der ersten overview.php
Erstellen und Testen der logout.php, einbinden in die erste Overview-Seite
Websicherheit für management/overview.php (Ersetzen von Umlauten)
Beginn der Arbeit an management/snippets/generate.php
Parameter, die per POST von snippets/generate.php nach snippets/preview.php fließen:
	- categorie: enthält die ID der Kategorie, vergleiche categories.xml
	- tags: enthält die vegebenen Schlagwörter (Komma-Seperated)
	- headline: Überschrift des Beitrags
	- shorttext: Enthält den Vorschautext für die Übesicht
Anpassen der authentification.php:
	- Sie enthält nun eine Funktion auth($pathToUsersXML)
	- Diese MUSS zur authentifikation ausgeführt werden
	- Die Funktion benötigt als Parameter den Pfad aus dem aktuellen Verzeichnis zur users.xml-Datei


[14.04.2012] Backend - Beiträge
Einbauen weiterer Felder für generate.php
beginn der Arbeit am snippets/overview.php


[16.04.2012] XML-Änderungen
Snippets enthalten nun auch die Felder cID (Categorie-ID) und sID (Snippet-ID)
Snippets enthalten nun auch das feld tags (Stichwörter für Beiträge)
<![CDATA[]]>-Tag wird nur noch dort verwendet, wo der User HTML-Tags verwenden darf. Dies ist nur der Langtext im Snippet
categories.xml enthält nun das Feld tags (Stichwörter)
categories.xml enthält nun für jede Kategorie eine Beschreibung (feldname description)
myCMS.xml enthält nun auch ein Feld für die Blog-Beschreibung
index.php lädt nun auch die entsprechenden META-Infos. Folgende Regeln sind zu beachten:
	- description: Bei Korrekter Kategorie ist dies die Beschreibung der Kategorie, Ansonsten die Beschreibung des Blogs
	- keywords: Die für die Kategorie hinterlegten tags, ansonsten keine Keywords
Funktion wurde getestet, tests bestanden


[17.04.2012]
Anpassung snippet.php, lädt jetzt auch entsprechende META-Daten
snippet.php nutzt nun auch sID und cID in snippet.xml (Muss aber noch getestet werden!)
snippet.php arbeitet nun nach aktuellstem Stand effizient. Nutzt neue xml-Bausteine
index.php nach kurzem ausfall nun auch wieder Funktionstüchtig


[18.04.2012]
Anpassungen index.php (nutzt nun auch neue xml-Elemente)
Test der index.php erfolgreich


[19.04.2012]
Änderungen in der Verwaltung von myCMSxml
Umstellen der TODO-Liste von txt-Datei auf die App Wunderlist


[20.04.2012]
Beginn der Arbeit am overview.php für die Snippets
snippet.php ließt nun auch versteckte snippets (aus ordner 'hidden')


[28.04.2012]
Beginn der Arbeit am DB-Connector


[01.05.2012]
Fertigstellen des DB-Schemas


[03.05.2012]
Fertigstellen des Initscriptes in PHP (Als Funktion)
Erfolgreiches Testen des scriptes, keine Syntaxfehler
Fertigstellen der Klasse "Kategorie" (dbconnector.php)


[04.05.2012]
Erweitern des Initscriptes um Voreingestellte Kategorien (FOOTER, HIDDEN und DRAFT)
Löschen dieverser Klassen (->TODO: Überlegen des Klassenkonzeptes für Frontend)
Erstellen eines Funktionsschemas, das für die get-Funktionen verbindlich verwendet werden soll
Erstellen von getKategorien() und getBeitraege() (->TODO: Muss noch angepasst werden)


[05.05.2012]
Arbeiten an dbconnector.php und abstractObjects.php sind solange eingestellt, bis das genaue Klassenkonzept bekannt und geplant ist!
Erarbeiten der für das Frontend benötigten Abfragen.


[06.05.2012]
Alle benötigten Funktionen werden im dbconnector gehalten:
K1		getAllKategorien()
K2		getOneKategorie($CID)

B1+2	getShortBeitraege($CID)
B3		getforFooter()


[07.05.2012]
Fertigstellen K1, K2, B1+2
Fertigstellen B3


[11.05.2012]
Beginn der Umsetzung des Initscriptes als pures sql
Bisher angedachtes Setup:
	- Generieren der Datenbank über ein externes Verwaltungstool und das mitgelieferte Script
	- Generieren der Konfigurationsdatei mit den entsprechenden Daten
	- Hochladen des CMS
	? Erstes Einloggen mit PW-Änderung ?


[16.05.2012]
Es gibt doch ein Leben nach den Prüfungen ;)
Übertragen aller Daten auf den Windows-PC, einrichten einer Lokalen entwicklungsumgebung (XAMPP, Wunderlist, Querybrowser und Aptana Studio 3)
Testen der Funktion (Funktioniert)
Initscript übersetzen in pures SQL
Anlegen einer Datenbank mycmsxml
Ausführen des Initscriptes (keine Fehler)
erstellen der config.php
beginn mit der Umstellung der index.php auf DB


[18.05.2012]
Arbeit am DBConnector, tests durch test.php. Verbindungsaufbau mit der DB funktioniert noch nicht


[19.05.2012]
Beheben des Fehlers am DB-Connector, auf das Array wurde nicht richtig zugegriffen.
Test der simple_dbcconnector-Funktionen:
	- K1 -> Funktioniert
	- K2 -> Funktioniert
	- B1+2 -> Funktioniert
	- B3 -> Funktioniert
Änderungen am Initscript
Einfügen neuer Sätze in Tabelle Rolle (RID 1-6)
Weiteres erarbeiten der neuen Index.php. läuft unter newindex.php
Löschen der Error-Page. Bei Fehlerhafte eingabe wird sofort an Index weitergeleitet.
	- Fehlermeldung für Index.php (Etwa mit eigener Fehlertabelle?)


[21.05.2012]
Arbeiten an der newindex.php
Arbeiten an der neuen Tabelle Konfiguration (soll die aktuelle Konfiguration des CMS halten)
Hinzufügen der Funktion getKonfiguration() zum DB-SimpleConnector, die die Konfiguration lädt


[22.05.2012]
Ubenennungen:
	index.php -> old_index.php
	newindex.php -> index.php
Style funktioniert in der index.php
index.php funktioniert komplett mit Umstellung auf die Datenbank. Nur Umlaute machen noch Probleme
->Umlaute davor umparsen in die entsprechenden Unicodes?


[23.05.2012]
Eintragen der Tabelle 'Konfiguration' in das DB-Schema
Erweitern von B1+2, anpassen an Suche der eingegebenen SID, auch im FOOTER und HIDDEN
Erweitern des DB-Connectors um B4 -> getOneBeitrag($SID), das den Beitrag mit der angegebenen ID lädt
Bei JEDER Funktion des DB-Connectors wird ein Assoziatives Array zurückgegeben. Auch wenn dieses nur eine Zeile umfasst!
( -> Standardisierter Umgang mit returns aus dem Connector)
Umsetzen des DB-Connectors in snippet.php, errorhandling wird mit error404.php eingeführt
Einpflegen der Anmeldeseite in das neue CMS
Überarbeitung von getShortBeitraege($CID), Sortierung der Beiträge aufsteigend, Prio1 -> Sreleased, Prio2 -> Slastmod
Formatierung der Funktionen im DB-Connector (Vor allem den SQL-Code)
Löschen der alten Kategorieordner C0001, C0002, hidden, footer
Anlegen eines Ordners old_datas -> Alte Dateien, die vielleicht noch algorithmen beinhalten, die benötigt werden
Verschieben einiger Dateien in dieses Verzeichnis


[24.05.2012]
Einrichten von git (Version 1.7.10)
Einrichten des Errorhandlings (erstellen der error404.php)
Aufruf aus index.php (Falsche Kategorie gewählt) funktioniert
Aufruf aus snippet.php (Falschen Beitrag gewählt) funktioniert
umbenennen der datei dbconnector.php in s_dbconnector.php, da noch ein erweiterter Datenbankkonnektor erstellt wird
